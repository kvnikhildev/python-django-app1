pipeline {
    agent any
     environment {
        TRIVY_IMAGE = "aquasec/trivy"  // Using Trivy Docker image to avoid installing it
        DOCKER_IMAGE = "pythonapp-v1"
    }


    stages {

        stage('Clone Repo') {
            steps {
                    git branch: 'main', url: 'https://github.com/kvnikhildev/python-django-app1.git'
            }
        }
        
        stage('build docker image ') {
            steps {
                script {
               
                 sh "docker build -t ${DOCKER_IMAGE} myproject"

                }
            }
        }
        stage('code quality and unit test ') {
            steps {
                script {
                 sh """
                docker run --rm -v "\$PWD":/app -w /app ${DOCKER_IMAGE} sh -c '  #for flake and pytest it should install in jenkin server but we here use the same docker file and use the present work directry as app
                flake8 . --exclude=myenv || true                     #skip the code quality and unit test error by adding || true
                pytest || true
                '
            """
                }

            }
        }
        stage('securityscan') {
            steps {
                script {
                    // Run Trivy container scan for vulnerabilities on the built image
                    sh """
                    docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
                    ${TRIVY_IMAGE} image --no-progress --severity HIGH,CRITICAL ${DOCKER_IMAGE}
                    
                    """
                }

            }
        }
        stage('deploy applicaiton') {
            steps {
                script {
                    // Run Trivy container scan for vulnerabilities on the built image
                    sh 'docker run -p 8000:8000 ${DOCKER_IMAGE}'  
                    
                  
                } 

            }
        }
    }

        post {
            always {
                archiveArtifacts artifacts: '**/trivy-report.txt', allowEmptyArchive: true
                archiveArtifacts artifacts: '**/pytest-report.xml', allowEmptyArchive: true
                }
           }
}

